{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { loginUser, signupUser } from '../api'; // Assuming api calls return { data: { token, user } } on success\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\n  const [loading, setLoading] = useState(false); // Add loading state\n  const [error, setError] = useState(null); // Add error state\n\n  // Effect to potentially validate token on load (optional)\n  useEffect(() => {\n    const storedToken = localStorage.getItem('authToken');\n    const storedUser = localStorage.getItem('authUser'); // Store user data too\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false); // Ensure state is false if no token/user\n    }\n  }, []);\n  const login = useCallback(async credentials => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await loginUser(credentials);\n      if (response.data && response.data.token && response.data.user) {\n        const {\n          token: apiToken,\n          user: apiUser\n        } = response.data;\n        localStorage.setItem('authToken', apiToken);\n        localStorage.setItem('authUser', JSON.stringify(apiUser)); // Store user data\n        setToken(apiToken);\n        setUser(apiUser);\n        setIsAuthenticated(true);\n        return true; // Indicate success\n      } else {\n        throw new Error(response.data.message || 'Login failed: Invalid response from server');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Login failed');\n      setIsAuthenticated(false); // Ensure state reflects failure\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('authUser');\n      return false; // Indicate failure\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const signup = useCallback(async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await signupUser(userData);\n      if (response.status === 201 && response.data.message) {\n        // Signup successful, but doesn't log in automatically based on backend\n        // Optionally, you could call login() right after signup if desired\n        return true; // Indicate success\n      } else {\n        throw new Error(response.data.message || 'Signup failed: Invalid response from server');\n      }\n    } catch (err) {\n      // console.error(\"Signup error:\", err);\n      // setError(err.response?.data?.message || err.message || 'Signup failed');\n      //  return false; // Indicate failure\n      alert('signup succesful');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const logout = useCallback(() => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null); // Clear any previous errors on logout\n  }, []);\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    setError // Allow components to clear errors if needed\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"w1QKgjQ73n9H3vsC3N+oaD5HbZQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","loginUser","signupUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","storedToken","storedUser","JSON","parse","login","credentials","response","data","apiToken","apiUser","setItem","stringify","Error","message","err","_err$response","_err$response$data","console","removeItem","signup","userData","status","alert","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport { loginUser, signupUser } from '../api'; // Assuming api calls return { data: { token, user } } on success\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\r\n  const [loading, setLoading] = useState(false); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n\r\n  // Effect to potentially validate token on load (optional)\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('authToken');\r\n    const storedUser = localStorage.getItem('authUser'); // Store user data too\r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n      setIsAuthenticated(true);\r\n    } else {\r\n       setIsAuthenticated(false); // Ensure state is false if no token/user\r\n    }\r\n  }, []);\r\n\r\n  const login = useCallback(async (credentials) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await loginUser(credentials);\r\n      if (response.data && response.data.token && response.data.user) {\r\n        const { token: apiToken, user: apiUser } = response.data;\r\n        localStorage.setItem('authToken', apiToken);\r\n        localStorage.setItem('authUser', JSON.stringify(apiUser)); // Store user data\r\n        setToken(apiToken);\r\n        setUser(apiUser);\r\n        setIsAuthenticated(true);\r\n        return true; // Indicate success\r\n      } else {\r\n         throw new Error(response.data.message || 'Login failed: Invalid response from server');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.response?.data?.message || err.message || 'Login failed');\r\n      setIsAuthenticated(false); // Ensure state reflects failure\r\n      setUser(null);\r\n      setToken(null);\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('authUser');\r\n      return false; // Indicate failure\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const signup = useCallback(async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await signupUser(userData);\r\n       if (response.status === 201 && response.data.message) {\r\n          // Signup successful, but doesn't log in automatically based on backend\r\n          // Optionally, you could call login() right after signup if desired\r\n          return true; // Indicate success\r\n       } else {\r\n         throw new Error(response.data.message || 'Signup failed: Invalid response from server');\r\n       }\r\n    } catch (err) {\r\n      // console.error(\"Signup error:\", err);\r\n      // setError(err.response?.data?.message || err.message || 'Signup failed');\r\n      //  return false; // Indicate failure\r\n      alert('signup succesful')\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('authUser');\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setError(null); // Clear any previous errors on logout\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    loading,\r\n    error,\r\n    login,\r\n    signup,\r\n    logout,\r\n    setError // Allow components to clear errors if needed\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}