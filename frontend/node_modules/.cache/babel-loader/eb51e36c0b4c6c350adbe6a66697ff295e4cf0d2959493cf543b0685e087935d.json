{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000',\n  // Fallback URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor to add the auth token to requests\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Authentication API calls\nexport const loginUser = credentials => apiClient.post('/login', credentials);\nexport const signupUser = userData => apiClient.post('/signup', userData);\n\n// Account API calls (Protected)\nexport const getBalance = () => apiClient.get('/balance');\nexport const depositAmount = data => apiClient.post('/deposit', data);\nexport const getAccountType = () => apiClient.get('/account-type');\n\n// Transaction API calls (Protected)\nexport const createTransaction = data => apiClient.post('/transaction', data);\nexport const getTransactions = () => apiClient.get('/transactions');\n\n// Mutual Fund API calls (Protected)\nexport const createMutualFund = data => apiClient.post('/mutual-fund', data);\nexport const getMutualFunds = () => apiClient.get('/mutual-funds');\n\n// Locker API calls (Protected)\nexport const createLocker = data => apiClient.post('/locker', data);\nexport const getLockers = () => apiClient.get('/lockers');\n\n// Personal Details API calls (Protected)\nexport const getPersonalDetails = () => apiClient.get('/personal-details');\nexport const updatePersonalDetails = data => apiClient.post('/personal-details', data);\nexport const withdrawAmount = data => apiClient.post('/withdraw', data);\nexport default apiClient; // Optional: export the configured instance if needed directly","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","loginUser","credentials","post","signupUser","userData","getBalance","get","depositAmount","data","getAccountType","createTransaction","getTransactions","createMutualFund","getMutualFunds","createLocker","getLockers","getPersonalDetails","updatePersonalDetails","withdrawAmount"],"sources":["E:/dbms project bank/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000', // Fallback URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor to add the auth token to requests\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API calls\r\nexport const loginUser = (credentials) => apiClient.post('/login', credentials);\r\nexport const signupUser = (userData) => apiClient.post('/signup', userData);\r\n\r\n// Account API calls (Protected)\r\nexport const getBalance = () => apiClient.get('/balance');\r\nexport const depositAmount = (data) => apiClient.post('/deposit', data);\r\nexport const getAccountType = () => apiClient.get('/account-type');\r\n\r\n// Transaction API calls (Protected)\r\nexport const createTransaction = (data) => apiClient.post('/transaction', data);\r\nexport const getTransactions = () => apiClient.get('/transactions');\r\n\r\n// Mutual Fund API calls (Protected)\r\nexport const createMutualFund = (data) => apiClient.post('/mutual-fund', data);\r\nexport const getMutualFunds = () => apiClient.get('/mutual-funds');\r\n\r\n\r\n// Locker API calls (Protected)\r\nexport const createLocker = (data) => apiClient.post('/locker', data);\r\nexport const getLockers = () => apiClient.get('/lockers');\r\n\r\n// Personal Details API calls (Protected)\r\nexport const getPersonalDetails = () => apiClient.get('/personal-details');\r\nexport const updatePersonalDetails = (data) => apiClient.post('/personal-details', data);\r\n\r\nexport const withdrawAmount = (data) => apiClient.post('/withdraw', data);\r\n\r\nexport default apiClient; // Optional: export the configured instance if needed directly"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;EAAE;EACxEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAIC,WAAW,IAAKlB,SAAS,CAACmB,IAAI,CAAC,QAAQ,EAAED,WAAW,CAAC;AAC/E,OAAO,MAAME,UAAU,GAAIC,QAAQ,IAAKrB,SAAS,CAACmB,IAAI,CAAC,SAAS,EAAEE,QAAQ,CAAC;;AAE3E;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAMtB,SAAS,CAACuB,GAAG,CAAC,UAAU,CAAC;AACzD,OAAO,MAAMC,aAAa,GAAIC,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,UAAU,EAAEM,IAAI,CAAC;AACvE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM1B,SAAS,CAACuB,GAAG,CAAC,eAAe,CAAC;;AAElE;AACA,OAAO,MAAMI,iBAAiB,GAAIF,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,cAAc,EAAEM,IAAI,CAAC;AAC/E,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM5B,SAAS,CAACuB,GAAG,CAAC,eAAe,CAAC;;AAEnE;AACA,OAAO,MAAMM,gBAAgB,GAAIJ,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,cAAc,EAAEM,IAAI,CAAC;AAC9E,OAAO,MAAMK,cAAc,GAAGA,CAAA,KAAM9B,SAAS,CAACuB,GAAG,CAAC,eAAe,CAAC;;AAGlE;AACA,OAAO,MAAMQ,YAAY,GAAIN,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,SAAS,EAAEM,IAAI,CAAC;AACrE,OAAO,MAAMO,UAAU,GAAGA,CAAA,KAAMhC,SAAS,CAACuB,GAAG,CAAC,UAAU,CAAC;;AAEzD;AACA,OAAO,MAAMU,kBAAkB,GAAGA,CAAA,KAAMjC,SAAS,CAACuB,GAAG,CAAC,mBAAmB,CAAC;AAC1E,OAAO,MAAMW,qBAAqB,GAAIT,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,mBAAmB,EAAEM,IAAI,CAAC;AAExF,OAAO,MAAMU,cAAc,GAAIV,IAAI,IAAKzB,SAAS,CAACmB,IAAI,CAAC,WAAW,EAAEM,IAAI,CAAC;AAEzE,eAAezB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}