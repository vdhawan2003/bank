{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport useAuth from '../hooks/useAuth';\nimport './SignupPage.css'; // <-- Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const navigate = useNavigate();\n  // Removed 'error' from useAuth as it's not used (commented out below)\n  // If you uncomment the error display, add { error } back: const { error } = useAuth();\n  useAuth();\n  const [signupMessage, setSignupMessage] = useState('');\n  const handleSignupSuccess = () => {\n    // Optional: Show a success message and redirect to login\n    setSignupMessage('Signup successful! Please log in.');\n    // Redirect after a short delay or provide a link\n    setTimeout(() => {\n      navigate('/login');\n    }, 2000); // Redirect after 2 seconds\n  };\n\n  // --- Backend logic - Should NOT be in frontend component ---\n  // const bankDetailsQuery = `\n  // INSERT INTO bank_details\n  // (user_id, account_type, opening_balance, current_balance, account_status)\n  // VALUES (?, ?, ?, ?, ?)\n  // `;\n  // const initialBalance = 0.00;\n  // const accountType = 'Saving';\n  // const initialStatus = 'active';\n  // --- End of backend logic ---\n\n  return (\n    /*#__PURE__*/\n    // Added className for container styling\n    _jsxDEV(\"div\", {\n      className: \"signup-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        mode: \"signup\",\n        onSubmitSuccess: handleSignupSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), signupMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green',\n          marginTop: '10px'\n        },\n        children: signupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(SignupPage, \"yyi6vJdyfDhXspkxXw3SujRxbl8=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useNavigate","AuthForm","useAuth","jsxDEV","_jsxDEV","SignupPage","_s","navigate","signupMessage","setSignupMessage","handleSignupSuccess","setTimeout","className","children","mode","onSubmitSuccess","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/SignupPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AuthForm from '../components/AuthForm';\r\nimport useAuth from '../hooks/useAuth';\r\nimport './SignupPage.css'; // <-- Import the CSS file\r\n\r\nconst SignupPage = () => {\r\n  const navigate = useNavigate();\r\n  // Removed 'error' from useAuth as it's not used (commented out below)\r\n  // If you uncomment the error display, add { error } back: const { error } = useAuth();\r\n  useAuth();\r\n  const [signupMessage, setSignupMessage] = useState('');\r\n\r\n  const handleSignupSuccess = () => {\r\n    // Optional: Show a success message and redirect to login\r\n    setSignupMessage('Signup successful! Please log in.');\r\n    // Redirect after a short delay or provide a link\r\n    setTimeout(() => {\r\n       navigate('/login');\r\n    }, 2000); // Redirect after 2 seconds\r\n  };\r\n\r\n  // --- Backend logic - Should NOT be in frontend component ---\r\n  // const bankDetailsQuery = `\r\n  // INSERT INTO bank_details\r\n  // (user_id, account_type, opening_balance, current_balance, account_status)\r\n  // VALUES (?, ?, ?, ?, ?)\r\n  // `;\r\n  // const initialBalance = 0.00;\r\n  // const accountType = 'Saving';\r\n  // const initialStatus = 'active';\r\n  // --- End of backend logic ---\r\n\r\n  return (\r\n    // Added className for container styling\r\n    <div className=\"signup-page-container\">\r\n      {/* AuthForm contents will be styled by CSS */}\r\n      <AuthForm mode=\"signup\" onSubmitSuccess={handleSignupSuccess} />\r\n\r\n      {/* Signup success message - Styled by CSS targeting inline style */}\r\n      {signupMessage && <p style={{ color: 'green', marginTop: '10px' }}>{signupMessage}</p>}\r\n\r\n      {/* Optional context error - Styled by CSS targeting inline style */}\r\n      {/* {error && !signupMessage && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B;EACA;EACAE,OAAO,CAAC,CAAC;EACT,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAD,gBAAgB,CAAC,mCAAmC,CAAC;IACrD;IACAE,UAAU,CAAC,MAAM;MACdJ,QAAQ,CAAC,QAAQ,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACAH,OAAA;MAAKQ,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAEpCT,OAAA,CAACH,QAAQ;QAACa,IAAI,EAAC,QAAQ;QAACC,eAAe,EAAEL;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG/DX,aAAa,iBAAIJ,OAAA;QAAGgB,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAT,QAAA,EAAEL;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAInF;EAAC;AAEV,CAAC;AAACb,EAAA,CAxCID,UAAU;EAAA,QACGL,WAAW,EAG5BE,OAAO;AAAA;AAAAqB,EAAA,GAJHlB,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}