{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\MutualFundsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getMutualFunds, createMutualFund } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MutualFundsPage = () => {\n  _s();\n  const [investments, setInvestments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  // Add state for form inputs (fund_name, amount_invested, fund_type)\n  // Add state for form errors/success messages\n\n  const fetchFunds = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await getMutualFunds();\n      setInvestments(res.data.investments || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch mutual funds');\n      setInvestments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchFunds();\n  }, []);\n  const handleAddFundSubmit = async e => {\n    e.preventDefault();\n    // 1. Get form data from state\n    // 2. Basic validation\n    // 3. Call createMutualFund(formData)\n    // 4. Handle success (clear form, show message, refresh list)\n    // 5. Handle error (show message)\n    console.log(\"Add fund form submitted - Implement API call\");\n    // Example: await createMutualFund({ fund_name: '...', amount_invested: ..., fund_type: '...' });\n    // fetchFunds(); // Refresh list on success\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading mutual funds...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mutual Funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Investment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFundSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Fund\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Investments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }, this), investments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: investments.map(fund => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [fund.fund_name, \" (\", fund.fund_type, \") - Invested: $\", fund.amount_invested.toFixed(2), \" on \", new Date(fund.date_invested).toLocaleDateString()]\n      }, fund.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No mutual fund investments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MutualFundsPage, \"jMoY0KsIyYrOt6we/qX82weub60=\");\n_c = MutualFundsPage;\nexport default MutualFundsPage;\nvar _c;\n$RefreshReg$(_c, \"MutualFundsPage\");","map":{"version":3,"names":["React","useState","useEffect","getMutualFunds","createMutualFund","jsxDEV","_jsxDEV","MutualFundsPage","_s","investments","setInvestments","loading","setLoading","error","setError","fetchFunds","res","data","err","_err$response","_err$response$data","response","message","handleAddFundSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","style","color","length","map","fund","fund_name","fund_type","amount_invested","toFixed","Date","date_invested","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/MutualFundsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getMutualFunds, createMutualFund } from '../api';\r\n\r\nconst MutualFundsPage = () => {\r\n  const [investments, setInvestments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  // Add state for form inputs (fund_name, amount_invested, fund_type)\r\n  // Add state for form errors/success messages\r\n\r\n  const fetchFunds = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await getMutualFunds();\r\n      setInvestments(res.data.investments || []);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to fetch mutual funds');\r\n      setInvestments([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFunds();\r\n  }, []);\r\n\r\n  const handleAddFundSubmit = async (e) => {\r\n      e.preventDefault();\r\n      // 1. Get form data from state\r\n      // 2. Basic validation\r\n      // 3. Call createMutualFund(formData)\r\n      // 4. Handle success (clear form, show message, refresh list)\r\n      // 5. Handle error (show message)\r\n      console.log(\"Add fund form submitted - Implement API call\");\r\n      // Example: await createMutualFund({ fund_name: '...', amount_invested: ..., fund_type: '...' });\r\n      // fetchFunds(); // Refresh list on success\r\n  };\r\n\r\n  if (loading) return <p>Loading mutual funds...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Mutual Funds</h2>\r\n\r\n      {/* Add New Investment Form */}\r\n      <h3>Add Investment</h3>\r\n       <form onSubmit={handleAddFundSubmit}>\r\n            {/* Add input fields for fund_name, amount_invested, fund_type */}\r\n            {/* Example: */}\r\n            {/* <div><label>Fund Name:</label><input type=\"text\" ... /></div> */}\r\n            {/* <div><label>Amount:</label><input type=\"number\" ... /></div> */}\r\n            {/* <div><label>Fund Type:</label><input type=\"text\" ... /></div> */}\r\n            {/* Add error/success message display */}\r\n            <button type=\"submit\">Add Fund</button>\r\n       </form>\r\n       <hr/>\r\n\r\n\r\n      {/* Investment List */}\r\n       <h3>Your Investments</h3>\r\n       {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n      {investments.length > 0 ? (\r\n        <ul>\r\n          {investments.map((fund) => (\r\n            <li key={fund.id}>\r\n              {fund.fund_name} ({fund.fund_type}) - Invested: ${fund.amount_invested.toFixed(2)} on {new Date(fund.date_invested).toLocaleDateString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n         !error && <p>No mutual fund investments found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MutualFundsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA;;EAEA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,GAAG,GAAG,MAAMb,cAAc,CAAC,CAAC;MAClCO,cAAc,CAACM,GAAG,CAACC,IAAI,CAACR,WAAW,IAAI,EAAE,CAAC;IAC5C,CAAC,CAAC,OAAOS,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZN,QAAQ,CAAC,EAAAK,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,8BAA8B,CAAC;MACvEZ,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC3D;IACA;EACJ,CAAC;EAED,IAAIhB,OAAO,EAAE,oBAAOL,OAAA;IAAAsB,QAAA,EAAG;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAElD,oBACE1B,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrB1B,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAM2B,QAAQ,EAAEV,mBAAoB;MAAAK,QAAA,eAO/BtB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACP1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAIL1B,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBnB,KAAK,iBAAIP,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDvB,WAAW,CAAC4B,MAAM,GAAG,CAAC,gBACrB/B,OAAA;MAAAsB,QAAA,EACGnB,WAAW,CAAC6B,GAAG,CAAEC,IAAI,iBACpBjC,OAAA;QAAAsB,QAAA,GACGW,IAAI,CAACC,SAAS,EAAC,IAAE,EAACD,IAAI,CAACE,SAAS,EAAC,iBAAe,EAACF,IAAI,CAACG,eAAe,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI,EAAC,IAAIC,IAAI,CAACL,IAAI,CAACM,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA,GADjIP,IAAI,CAACQ,EAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,GAEJ,CAACnB,KAAK,iBAAIP,OAAA;MAAAsB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzEID,eAAe;AAAAyC,EAAA,GAAfzC,eAAe;AA2ErB,eAAeA,eAAe;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}