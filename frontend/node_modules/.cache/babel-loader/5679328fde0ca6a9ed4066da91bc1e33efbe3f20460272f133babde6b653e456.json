{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getBalance, getAccountType } from '../api'; // Import API functions\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [balance, setBalance] = useState(null);\n  const [accountType, setAccountType] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const balanceRes = await getBalance();\n        setBalance(balanceRes.data.balance);\n        const accountTypeRes = await getAccountType();\n        setAccountType(accountTypeRes.data.account_type);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(\"Dashboard fetch error:\", err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load dashboard data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Fetch on component mount\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Number: \", user === null || user === void 0 ? void 0 : user.account_no]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), accountType && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Type: \", accountType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), balance !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Balance: $\", balance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not retrieve balance.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"lyNWOiKows1kBA3gd9ZGKZyoJeI=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","getBalance","getAccountType","useAuth","jsxDEV","_jsxDEV","DashboardPage","_s","user","balance","setBalance","accountType","setAccountType","loading","setLoading","error","setError","fetchData","balanceRes","data","accountTypeRes","account_type","err","_err$response","_err$response$data","console","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","name","account_no","toFixed","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getBalance, getAccountType } from '../api'; // Import API functions\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst DashboardPage = () => {\r\n  const { user } = useAuth();\r\n  const [balance, setBalance] = useState(null);\r\n  const [accountType, setAccountType] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const balanceRes = await getBalance();\r\n        setBalance(balanceRes.data.balance);\r\n\r\n        const accountTypeRes = await getAccountType();\r\n        setAccountType(accountTypeRes.data.account_type);\r\n\r\n      } catch (err) {\r\n        console.error(\"Dashboard fetch error:\", err);\r\n        setError(err.response?.data?.message || 'Failed to load dashboard data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Fetch on component mount\r\n\r\n  if (loading) return <p>Loading dashboard...</p>;\r\n  if (error) return <p style={{ color: 'red' }}>Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <p>Welcome, {user?.name}!</p>\r\n      <p>Account Number: {user?.account_no}</p>\r\n      {accountType && <p>Account Type: {accountType}</p>}\r\n      {balance !== null ? (\r\n         <p>Current Balance: ${balance.toFixed(2)}</p>\r\n      ) : (\r\n         <p>Could not retrieve balance.</p>\r\n      )}\r\n      {/* Add Deposit Form/Functionality here if desired */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}