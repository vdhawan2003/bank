{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport useAuth from '../hooks/useAuth'; // useAuth is still needed for other potential context values or side effects\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  var _location$state, _location$state$from;\n  const navigate = useNavigate();\n  const location = useLocation();\n  // const { error } = useAuth(); // Removed 'error' as it's unused here\n  useAuth(); // Call the hook if it has side effects or provides other context implicitly, otherwise you might remove this line too if ONLY error was needed. Keep it if AuthForm or other parts rely on the Auth context being active/initialized by the hook.\n\n  // Redirect path after successful login\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\"; // Default to dashboard\n\n  const handleLoginSuccess = () => {\n    navigate(from, {\n      replace: true\n    }); // Redirect to intended page or dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      mode: \"login\",\n      onSubmitSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Z4yyNQ71h7u+nvKJUl5yfMPiqik=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","useLocation","AuthForm","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","navigate","location","from","state","pathname","handleLoginSuccess","replace","className","children","mode","onSubmitSuccess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport AuthForm from '../components/AuthForm';\r\nimport useAuth from '../hooks/useAuth'; // useAuth is still needed for other potential context values or side effects\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  // const { error } = useAuth(); // Removed 'error' as it's unused here\r\n  useAuth(); // Call the hook if it has side effects or provides other context implicitly, otherwise you might remove this line too if ONLY error was needed. Keep it if AuthForm or other parts rely on the Auth context being active/initialized by the hook.\r\n\r\n  // Redirect path after successful login\r\n  const from = location.state?.from?.pathname || \"/\"; // Default to dashboard\r\n\r\n  const handleLoginSuccess = () => {\r\n    navigate(from, { replace: true }); // Redirect to intended page or dashboard\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page-container\">\r\n      {/* AuthForm contents will be styled by the CSS above */}\r\n      <AuthForm mode=\"login\" onSubmitSuccess={handleLoginSuccess} />\r\n\r\n      {/* Optional page-level error - If you uncomment this, add 'error' back to useAuth() above */}\r\n      {/* {error && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,kBAAkB,CAAC,CAAC;AACxC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B;EACAE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEX;EACA,MAAMS,IAAI,GAAG,EAAAJ,eAAA,GAAAG,QAAQ,CAACE,KAAK,cAAAL,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBK,QAAQ,KAAI,GAAG,CAAC,CAAC;;EAEpD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BL,QAAQ,CAACE,IAAI,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eAEnCb,OAAA,CAACH,QAAQ;MAACiB,IAAI,EAAC,OAAO;MAACC,eAAe,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAI3D,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtBID,SAAS;EAAA,QACIN,WAAW,EACXC,WAAW,EAE5BE,OAAO;AAAA;AAAAsB,EAAA,GAJHnB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}