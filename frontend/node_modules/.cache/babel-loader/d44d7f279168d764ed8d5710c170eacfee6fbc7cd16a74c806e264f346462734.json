{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\TransactionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTransactions, depositAmount, getBalance, withdrawAmount } from '../api';\nimport './TransactionsPage.css'; // <-- Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsPage = () => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n\n  // Loading states\n  const [loadingBalance, setLoadingBalance] = useState(true);\n  const [loadingTransactions, setLoadingTransactions] = useState(true);\n\n  // Error states\n  const [errorBalance, setErrorBalance] = useState(null);\n  const [errorTransactions, setErrorTransactions] = useState(null);\n\n  // Form states\n  const [depositAmountValue, setDepositAmountValue] = useState('');\n  const [withdrawAmountValue, setWithdrawAmountValue] = useState('');\n  const [formDepositError, setFormDepositError] = useState('');\n  const [formDepositSuccess, setFormDepositSuccess] = useState('');\n  const [formWithdrawalError, setFormWithdrawalError] = useState('');\n  const [formWithdrawalSuccess, setFormWithdrawalSuccess] = useState('');\n\n  // --- Fetch Balance Function ---\n  const fetchBalance = async () => {\n    setLoadingBalance(true);\n    setErrorBalance(null);\n    try {\n      const res = await getBalance();\n      const rawBalance = res.data.balance;\n      const numericBalance = parseFloat(rawBalance);\n      if (isNaN(numericBalance)) {\n        throw new Error('Invalid balance data received from server.');\n      }\n      setBalance(numericBalance);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Fetch balance error:\", err);\n      setErrorBalance(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to fetch balance');\n      setBalance(null);\n    } finally {\n      setLoadingBalance(false);\n    }\n  };\n\n  // --- Fetch Transactions Function ---\n  const fetchTransactions = async () => {\n    setLoadingTransactions(true);\n    setErrorTransactions(null);\n    try {\n      const res = await getTransactions();\n      setTransactions(Array.isArray(res.data.transactions) ? res.data.transactions : []);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Fetch transactions error:\", err);\n      setErrorTransactions(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to fetch transactions');\n      setTransactions([]);\n    } finally {\n      setLoadingTransactions(false);\n    }\n  };\n\n  // --- Fetch initial data on mount ---\n  useEffect(() => {\n    fetchBalance();\n    fetchTransactions();\n  }, []);\n\n  // --- Handle Deposit Submission ---\n  const handleDepositSubmit = async e => {\n    e.preventDefault();\n    setFormDepositError('');\n    setFormDepositSuccess('');\n    setFormWithdrawalError(''); // Clear other form message\n    setFormWithdrawalSuccess(''); // Clear other form message\n\n    const amount = parseFloat(depositAmountValue);\n    if (isNaN(amount) || amount <= 0) {\n      setFormDepositError('Please enter a valid positive amount.');\n      return;\n    }\n\n    // --- Disable interaction while submitting (optional but good UX) ---\n    // setIsSubmitting(true); // Need state: const [isSubmitting, setIsSubmitting] = useState(false);\n\n    try {\n      await depositAmount({\n        amount\n      });\n      setFormDepositSuccess(`Successfully deposited $${amount.toFixed(2)}.`);\n      setDepositAmountValue('');\n      fetchBalance();\n      fetchTransactions();\n    } catch (depositError) {\n      var _depositError$respons, _depositError$respons2;\n      console.error(\"Deposit error:\", depositError);\n      setFormDepositError(((_depositError$respons = depositError.response) === null || _depositError$respons === void 0 ? void 0 : (_depositError$respons2 = _depositError$respons.data) === null || _depositError$respons2 === void 0 ? void 0 : _depositError$respons2.message) || 'Deposit failed.');\n      fetchBalance(); // Refresh balance even on failure\n    } finally {\n      // setIsSubmitting(false);\n    }\n  };\n\n  // --- Handle Withdrawal Submission ---\n  const handleWithdrawSubmit = async e => {\n    e.preventDefault();\n    setFormWithdrawalError('');\n    setFormWithdrawalSuccess('');\n    setFormDepositError(''); // Clear other form message\n    setFormDepositSuccess(''); // Clear other form message\n\n    const amount = parseFloat(withdrawAmountValue);\n    if (isNaN(amount) || amount <= 0) {\n      setFormWithdrawalError('Please enter a valid positive amount.');\n      return;\n    }\n\n    // --- Disable interaction while submitting (optional but good UX) ---\n    // setIsSubmitting(true);\n\n    try {\n      await withdrawAmount({\n        amount\n      });\n      setFormWithdrawalSuccess(`Successfully withdrew $${amount.toFixed(2)}.`);\n      setWithdrawAmountValue('');\n      fetchBalance();\n      fetchTransactions();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Withdrawal error:\", err);\n      setFormWithdrawalError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Withdrawal failed.');\n      fetchBalance(); // Refresh balance even on failure\n    } finally {\n      // setIsSubmitting(false);\n    }\n  };\n\n  // --- Determine combined loading state for disabling forms maybe ---\n  // const isProcessing = loadingBalance || loadingTransactions || isSubmitting; // If using isSubmitting state\n\n  // --- JSX Below ---\n  return (\n    /*#__PURE__*/\n    // Added className for container styling\n    _jsxDEV(\"div\", {\n      className: \"transactions-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), loadingBalance && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading balance...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 26\n      }, this), errorBalance && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Error: \", errorBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 24\n      }, this), balance !== null && !loadingBalance && !errorBalance && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.5em',\n          fontWeight: 'bold'\n        },\n        children: [\"$\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Make a Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDepositSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"depositAmount\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"depositAmount\",\n            value: depositAmountValue,\n            onChange: e => setDepositAmountValue(e.target.value),\n            min: \"0.01\",\n            step: \"0.01\",\n            required: true\n            //  disabled={isProcessing} // Example: Disable input while loading/submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), formDepositSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: formDepositSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 34\n        }, this), formDepositError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formDepositError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\"\n          // disabled={isProcessing} // Example: Disable button\n          ,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Make a Withdrawal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleWithdrawSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"withdrawAmount\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"withdrawAmount\",\n            value: withdrawAmountValue,\n            onChange: e => setWithdrawAmountValue(e.target.value),\n            min: \"0.01\",\n            step: \"0.01\",\n            required: true\n            //  disabled={isProcessing}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), formWithdrawalSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: formWithdrawalSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 39\n        }, this), formWithdrawalError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: formWithdrawalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: balance === null /* || isProcessing */,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), loadingTransactions && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading transaction history...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 31\n      }, this), errorTransactions && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Error fetching history: \", errorTransactions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }, this), !loadingTransactions && transactions.length === 0 && !errorTransactions && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 12\n      }, this), Array.isArray(transactions) && transactions.length > 0 &&\n      /*#__PURE__*/\n      // List items styled by CSS\n      _jsxDEV(\"ul\", {\n        children: transactions.map(tx => tx && tx.id ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [new Date(tx.transaction_date || tx.created_at || Date.now()).toLocaleString(), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textTransform: 'capitalize',\n              fontWeight: '500'\n            },\n            children: [\" \", tx.transaction_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              float: 'right',\n              fontWeight: 'bold',\n              color: tx.transaction_type === 'deposit' ? '#1a936f' : tx.transaction_type === 'withdrawal' ? '#c62828' : '#333'\n            },\n            children: [tx.transaction_type === 'deposit' ? '+' : tx.transaction_type === 'withdrawal' ? '-' : '', \"$\", typeof tx.amount === 'number' || !isNaN(parseFloat(tx.amount)) ? parseFloat(tx.amount).toFixed(2) : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)]\n        }, tx.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 16\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(TransactionsPage, \"ErlQ89WrNAgx4riF/qm0E/xufp8=\");\n_c = TransactionsPage;\nexport default TransactionsPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionsPage\");","map":{"version":3,"names":["React","useState","useEffect","getTransactions","depositAmount","getBalance","withdrawAmount","jsxDEV","_jsxDEV","TransactionsPage","_s","balance","setBalance","transactions","setTransactions","loadingBalance","setLoadingBalance","loadingTransactions","setLoadingTransactions","errorBalance","setErrorBalance","errorTransactions","setErrorTransactions","depositAmountValue","setDepositAmountValue","withdrawAmountValue","setWithdrawAmountValue","formDepositError","setFormDepositError","formDepositSuccess","setFormDepositSuccess","formWithdrawalError","setFormWithdrawalError","formWithdrawalSuccess","setFormWithdrawalSuccess","fetchBalance","res","rawBalance","data","numericBalance","parseFloat","isNaN","Error","err","_err$response","_err$response$data","console","error","response","message","fetchTransactions","Array","isArray","_err$response2","_err$response2$data","handleDepositSubmit","e","preventDefault","amount","toFixed","depositError","_depositError$respons","_depositError$respons2","handleWithdrawSubmit","_err$response3","_err$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","fontWeight","onSubmit","htmlFor","type","id","value","onChange","target","min","step","required","disabled","length","map","tx","Date","transaction_date","created_at","now","toLocaleString","textTransform","transaction_type","float","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/TransactionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getTransactions,\r\n  depositAmount,\r\n  getBalance,\r\n  withdrawAmount\r\n} from '../api';\r\nimport './TransactionsPage.css'; // <-- Import the CSS file\r\n\r\nconst TransactionsPage = () => {\r\n  const [balance, setBalance] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  // Loading states\r\n  const [loadingBalance, setLoadingBalance] = useState(true);\r\n  const [loadingTransactions, setLoadingTransactions] = useState(true);\r\n\r\n  // Error states\r\n  const [errorBalance, setErrorBalance] = useState(null);\r\n  const [errorTransactions, setErrorTransactions] = useState(null);\r\n\r\n  // Form states\r\n  const [depositAmountValue, setDepositAmountValue] = useState('');\r\n  const [withdrawAmountValue, setWithdrawAmountValue] = useState('');\r\n  const [formDepositError, setFormDepositError] = useState('');\r\n  const [formDepositSuccess, setFormDepositSuccess] = useState('');\r\n  const [formWithdrawalError, setFormWithdrawalError] = useState('');\r\n  const [formWithdrawalSuccess, setFormWithdrawalSuccess] = useState('');\r\n\r\n  // --- Fetch Balance Function ---\r\n  const fetchBalance = async () => {\r\n    setLoadingBalance(true);\r\n    setErrorBalance(null);\r\n    try {\r\n      const res = await getBalance();\r\n      const rawBalance = res.data.balance;\r\n      const numericBalance = parseFloat(rawBalance);\r\n      if (isNaN(numericBalance)) {\r\n        throw new Error('Invalid balance data received from server.');\r\n      }\r\n      setBalance(numericBalance);\r\n    } catch (err) {\r\n      console.error(\"Fetch balance error:\", err);\r\n      setErrorBalance(err.response?.data?.message || err.message || 'Failed to fetch balance');\r\n      setBalance(null);\r\n    } finally {\r\n      setLoadingBalance(false);\r\n    }\r\n  };\r\n\r\n  // --- Fetch Transactions Function ---\r\n  const fetchTransactions = async () => {\r\n    setLoadingTransactions(true);\r\n    setErrorTransactions(null);\r\n    try {\r\n      const res = await getTransactions();\r\n      setTransactions(Array.isArray(res.data.transactions) ? res.data.transactions : []);\r\n    } catch (err) {\r\n      console.error(\"Fetch transactions error:\", err);\r\n      setErrorTransactions(err.response?.data?.message || 'Failed to fetch transactions');\r\n      setTransactions([]);\r\n    } finally {\r\n      setLoadingTransactions(false);\r\n    }\r\n  };\r\n\r\n  // --- Fetch initial data on mount ---\r\n  useEffect(() => {\r\n    fetchBalance();\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  // --- Handle Deposit Submission ---\r\n  const handleDepositSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormDepositError('');\r\n    setFormDepositSuccess('');\r\n    setFormWithdrawalError(''); // Clear other form message\r\n    setFormWithdrawalSuccess(''); // Clear other form message\r\n\r\n    const amount = parseFloat(depositAmountValue);\r\n\r\n    if (isNaN(amount) || amount <= 0) {\r\n      setFormDepositError('Please enter a valid positive amount.');\r\n      return;\r\n    }\r\n\r\n    // --- Disable interaction while submitting (optional but good UX) ---\r\n    // setIsSubmitting(true); // Need state: const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    try {\r\n      await depositAmount({ amount });\r\n      setFormDepositSuccess(`Successfully deposited $${amount.toFixed(2)}.`);\r\n      setDepositAmountValue('');\r\n      fetchBalance();\r\n      fetchTransactions();\r\n    } catch (depositError) {\r\n      console.error(\"Deposit error:\", depositError);\r\n      setFormDepositError(depositError.response?.data?.message || 'Deposit failed.');\r\n      fetchBalance(); // Refresh balance even on failure\r\n    } finally {\r\n      // setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // --- Handle Withdrawal Submission ---\r\n  const handleWithdrawSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormWithdrawalError('');\r\n    setFormWithdrawalSuccess('');\r\n    setFormDepositError(''); // Clear other form message\r\n    setFormDepositSuccess(''); // Clear other form message\r\n\r\n    const amount = parseFloat(withdrawAmountValue);\r\n\r\n    if (isNaN(amount) || amount <= 0) {\r\n        setFormWithdrawalError('Please enter a valid positive amount.');\r\n        return;\r\n    }\r\n\r\n    // --- Disable interaction while submitting (optional but good UX) ---\r\n    // setIsSubmitting(true);\r\n\r\n    try {\r\n        await withdrawAmount({ amount });\r\n        setFormWithdrawalSuccess(`Successfully withdrew $${amount.toFixed(2)}.`);\r\n        setWithdrawAmountValue('');\r\n        fetchBalance();\r\n        fetchTransactions();\r\n    } catch (err) {\r\n        console.error(\"Withdrawal error:\", err);\r\n        setFormWithdrawalError(err.response?.data?.message || 'Withdrawal failed.');\r\n        fetchBalance(); // Refresh balance even on failure\r\n    } finally {\r\n        // setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // --- Determine combined loading state for disabling forms maybe ---\r\n  // const isProcessing = loadingBalance || loadingTransactions || isSubmitting; // If using isSubmitting state\r\n\r\n  // --- JSX Below ---\r\n  return (\r\n    // Added className for container styling\r\n    <div className=\"transactions-page-container\">\r\n      <h2>Transactions</h2>\r\n\r\n      {/* --- Balance Display --- Styled by CSS */}\r\n      <h3>Current Balance</h3>\r\n      {loadingBalance && <p>Loading balance...</p>}\r\n      {errorBalance && <p style={{ color: 'red' }}>Error: {errorBalance}</p>}\r\n      {balance !== null && !loadingBalance && !errorBalance && (\r\n        <p style={{ fontSize: '1.5em', fontWeight: 'bold' }}>\r\n          ${balance.toFixed(2)}\r\n        </p>\r\n      )}\r\n      <hr />\r\n\r\n      {/* --- Deposit Form --- Styled by CSS */}\r\n      <h3>Make a Deposit</h3>\r\n      <form onSubmit={handleDepositSubmit}>\r\n          <div>\r\n              <label htmlFor=\"depositAmount\">Amount:</label>\r\n              <input type=\"number\" id=\"depositAmount\" value={depositAmountValue}\r\n                     onChange={(e) => setDepositAmountValue(e.target.value)}\r\n                     min=\"0.01\" step=\"0.01\" required\r\n                    //  disabled={isProcessing} // Example: Disable input while loading/submitting\r\n                     />\r\n          </div>\r\n          {formDepositSuccess && <p style={{ color: 'green' }}>{formDepositSuccess}</p>}\r\n          {formDepositError && <p style={{ color: 'red' }}>{formDepositError}</p>}\r\n          <button type=\"submit\"\r\n            // disabled={isProcessing} // Example: Disable button\r\n            >Deposit</button>\r\n      </form>\r\n      <hr />\r\n\r\n      {/* --- Withdrawal Form --- Styled by CSS */}\r\n      <h3>Make a Withdrawal</h3>\r\n      <form onSubmit={handleWithdrawSubmit}>\r\n            <div>\r\n                <label htmlFor=\"withdrawAmount\">Amount:</label>\r\n                <input type=\"number\" id=\"withdrawAmount\" value={withdrawAmountValue}\r\n                       onChange={(e) => setWithdrawAmountValue(e.target.value)}\r\n                       min=\"0.01\" step=\"0.01\" required\r\n                      //  disabled={isProcessing}\r\n                       />\r\n            </div>\r\n            {formWithdrawalSuccess && <p style={{ color: 'green' }}>{formWithdrawalSuccess}</p>}\r\n            {formWithdrawalError && <p style={{ color: 'red' }}>{formWithdrawalError}</p>}\r\n            <button type=\"submit\" disabled={balance === null /* || isProcessing */}>Withdraw</button>\r\n      </form>\r\n      <hr />\r\n\r\n      {/* --- Transaction History --- Styled by CSS */}\r\n      <h3>History</h3>\r\n      {loadingTransactions && <p>Loading transaction history...</p>}\r\n      {errorTransactions && <p style={{ color: 'red' }}>Error fetching history: {errorTransactions}</p>}\r\n      {!loadingTransactions && transactions.length === 0 && !errorTransactions && (\r\n           <p>No transactions found.</p>\r\n      )}\r\n      {Array.isArray(transactions) && transactions.length > 0 && (\r\n        // List items styled by CSS\r\n        <ul>\r\n          {transactions.map((tx) => (\r\n             tx && tx.id ? (\r\n               <li key={tx.id}>\r\n                  {new Date(tx.transaction_date || tx.created_at || Date.now()).toLocaleString()} -\r\n                  {/* Capitalize type for display */}\r\n                  <span style={{ textTransform: 'capitalize', fontWeight: '500' }}> {tx.transaction_type}</span> -\r\n                  <span style={{ float: 'right', fontWeight: 'bold', color: tx.transaction_type === 'deposit' ? '#1a936f' : (tx.transaction_type === 'withdrawal' ? '#c62828' : '#333') }}>\r\n                       {/* Display +/- sign based on type */}\r\n                       {tx.transaction_type === 'deposit' ? '+' : (tx.transaction_type === 'withdrawal' ? '-' : '')}\r\n                       ${typeof tx.amount === 'number' || !isNaN(parseFloat(tx.amount)) ? parseFloat(tx.amount).toFixed(2) : 'N/A'}\r\n                  </span>\r\n               </li>\r\n             ) : null\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}