{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\TransactionsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTransactions, createTransaction, depositAmount } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsPage = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [depositAmountValue, setDepositAmountValue] = useState(''); // For deposit form\n  const [formError, setFormError] = useState('');\n  const [formSuccess, setFormSuccess] = useState('');\n  const fetchTransactions = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await getTransactions();\n      setTransactions(res.data.transactions || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Fetch transactions error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch transactions');\n      setTransactions([]); // Clear transactions on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  const handleDepositSubmit = async e => {\n    e.preventDefault();\n    setFormError('');\n    setFormSuccess('');\n    const amount = parseFloat(depositAmountValue);\n    if (isNaN(amount) || amount <= 0) {\n      setFormError('Please enter a valid positive amount.');\n      return;\n    }\n    try {\n      // Option 1: Use dedicated /deposit endpoint\n      await depositAmount({\n        amount\n      });\n\n      // Option 2: Use generic /transaction endpoint (if backend supports 'Deposit' type updating balance)\n      // await createTransaction({ transaction_type: 'Deposit', amount });\n\n      setFormSuccess(`Successfully deposited $${amount.toFixed(2)}`);\n      setDepositAmountValue(''); // Clear input\n      fetchTransactions(); // Refresh transaction list (and balance if displayed here)\n      // You might also need to update balance displayed elsewhere (e.g., dashboard, context)\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Deposit error:\", err);\n      setFormError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Deposit failed.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading transactions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Make a Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDepositSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"depositAmount\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depositAmount\",\n          value: depositAmountValue,\n          onChange: e => setDepositAmountValue(e.target.value),\n          min: \"0.01\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this), formSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: formSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(tx => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(tx.timestamp).toLocaleString(), \" - \", tx.transaction_type, \" - Amount: $\", tx.amount.toFixed(2)]\n      }, tx.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transactions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsPage, \"FGG8xx9ojvuKirXilSdLlphx4AM=\");\n_c = TransactionsPage;\nexport default TransactionsPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionsPage\");","map":{"version":3,"names":["React","useState","useEffect","getTransactions","createTransaction","depositAmount","jsxDEV","_jsxDEV","TransactionsPage","_s","transactions","setTransactions","loading","setLoading","error","setError","depositAmountValue","setDepositAmountValue","formError","setFormError","formSuccess","setFormSuccess","fetchTransactions","res","data","err","_err$response","_err$response$data","console","response","message","handleDepositSubmit","e","preventDefault","amount","parseFloat","isNaN","toFixed","_err$response2","_err$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","min","step","required","style","color","length","map","tx","Date","timestamp","toLocaleString","transaction_type","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/TransactionsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getTransactions, createTransaction, depositAmount } from '../api';\r\n\r\nconst TransactionsPage = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [depositAmountValue, setDepositAmountValue] = useState(''); // For deposit form\r\n  const [formError, setFormError] = useState('');\r\n  const [formSuccess, setFormSuccess] = useState('');\r\n\r\n\r\n  const fetchTransactions = async () => {\r\n     setLoading(true);\r\n     setError(null);\r\n     try {\r\n       const res = await getTransactions();\r\n       setTransactions(res.data.transactions || []);\r\n     } catch (err) {\r\n       console.error(\"Fetch transactions error:\", err);\r\n       setError(err.response?.data?.message || 'Failed to fetch transactions');\r\n       setTransactions([]); // Clear transactions on error\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n const handleDepositSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormError('');\r\n    setFormSuccess('');\r\n    const amount = parseFloat(depositAmountValue);\r\n    if (isNaN(amount) || amount <= 0) {\r\n        setFormError('Please enter a valid positive amount.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Option 1: Use dedicated /deposit endpoint\r\n        await depositAmount({ amount });\r\n\r\n        // Option 2: Use generic /transaction endpoint (if backend supports 'Deposit' type updating balance)\r\n        // await createTransaction({ transaction_type: 'Deposit', amount });\r\n\r\n        setFormSuccess(`Successfully deposited $${amount.toFixed(2)}`);\r\n        setDepositAmountValue(''); // Clear input\r\n        fetchTransactions(); // Refresh transaction list (and balance if displayed here)\r\n        // You might also need to update balance displayed elsewhere (e.g., dashboard, context)\r\n\r\n    } catch (err) {\r\n        console.error(\"Deposit error:\", err);\r\n        setFormError(err.response?.data?.message || 'Deposit failed.');\r\n    }\r\n  };\r\n\r\n\r\n  if (loading) return <p>Loading transactions...</p>;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Transactions</h2>\r\n\r\n       {/* Deposit Form */}\r\n       <h3>Make a Deposit</h3>\r\n       <form onSubmit={handleDepositSubmit}>\r\n            <div>\r\n                <label htmlFor=\"depositAmount\">Amount:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"depositAmount\"\r\n                    value={depositAmountValue}\r\n                    onChange={(e) => setDepositAmountValue(e.target.value)}\r\n                    min=\"0.01\"\r\n                    step=\"0.01\"\r\n                    required\r\n                />\r\n            </div>\r\n            {formError && <p style={{ color: 'red' }}>{formError}</p>}\r\n            {formSuccess && <p style={{ color: 'green' }}>{formSuccess}</p>}\r\n            <button type=\"submit\">Deposit</button>\r\n       </form>\r\n       <hr />\r\n\r\n\r\n      {/* Transaction List */}\r\n      <h3>History</h3>\r\n       {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n      {transactions.length > 0 ? (\r\n        <ul>\r\n          {transactions.map((tx) => (\r\n            <li key={tx.id}>\r\n              {new Date(tx.timestamp).toLocaleString()} - {tx.transaction_type} - Amount: ${tx.amount.toFixed(2)}\r\n              {/* Add more details if available */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n         !error && <p>No transactions found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}