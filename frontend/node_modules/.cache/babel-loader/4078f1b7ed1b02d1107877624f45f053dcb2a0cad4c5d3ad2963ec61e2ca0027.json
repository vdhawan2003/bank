{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getBalance, getAccountType } from '../api'; // Import API functions\nimport useAuth from '../hooks/useAuth';\nimport './DashboardPage.css'; // <-- Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [balance, setBalance] = useState(null);\n  const [accountType, setAccountType] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      setBalance(null); // Reset balance on new fetch\n      setAccountType(''); // Reset account type on new fetch\n      try {\n        var _balanceRes$data, _accountTypeRes$data;\n        // Simulate slight delay for loading indicator visibility\n        // await new Promise(resolve => setTimeout(resolve, 500)); \n\n        const balanceRes = await getBalance();\n        // Ensure data and balance property exist before parsing\n        const balanceValue = (balanceRes === null || balanceRes === void 0 ? void 0 : (_balanceRes$data = balanceRes.data) === null || _balanceRes$data === void 0 ? void 0 : _balanceRes$data.balance) !== undefined ? parseFloat(balanceRes.data.balance) : NaN; // Use NaN if balance is missing\n        setBalance(isNaN(balanceValue) ? null : balanceValue); // Set to null if parsing failed or missing\n\n        const accountTypeRes = await getAccountType();\n        setAccountType((accountTypeRes === null || accountTypeRes === void 0 ? void 0 : (_accountTypeRes$data = accountTypeRes.data) === null || _accountTypeRes$data === void 0 ? void 0 : _accountTypeRes$data.account_type) || 'N/A'); // Provide default if missing\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(\"Dashboard fetch error:\", err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Fetch on component mount\n\n  // --- Loading State ---\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  }\n\n  // --- Error State ---\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Oops! Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this);\n  }\n\n  // --- Main Content State ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-header\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Welcome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: (user === null || user === void 0 ? void 0 : user.name) || 'User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Account Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: (user === null || user === void 0 ? void 0 : user.account_no) || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), accountType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Account Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-label\",\n        children: \"Current Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), balance !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-amount\",\n        children: [\"$\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-error\",\n        children: \"Balance unavailable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"lyNWOiKows1kBA3gd9ZGKZyoJeI=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","getBalance","getAccountType","useAuth","jsxDEV","_jsxDEV","DashboardPage","_s","user","balance","setBalance","accountType","setAccountType","loading","setLoading","error","setError","fetchData","_balanceRes$data","_accountTypeRes$data","balanceRes","balanceValue","data","undefined","parseFloat","NaN","isNaN","accountTypeRes","account_type","err","_err$response","_err$response$data","console","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","account_no","toFixed","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getBalance, getAccountType } from '../api'; // Import API functions\r\nimport useAuth from '../hooks/useAuth';\r\nimport './DashboardPage.css'; // <-- Import the CSS file\r\n\r\nconst DashboardPage = () => {\r\n  const { user } = useAuth();\r\n  const [balance, setBalance] = useState(null);\r\n  const [accountType, setAccountType] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setBalance(null); // Reset balance on new fetch\r\n      setAccountType(''); // Reset account type on new fetch\r\n      try {\r\n        // Simulate slight delay for loading indicator visibility\r\n        // await new Promise(resolve => setTimeout(resolve, 500)); \r\n        \r\n        const balanceRes = await getBalance();\r\n        // Ensure data and balance property exist before parsing\r\n        const balanceValue = balanceRes?.data?.balance !== undefined\r\n          ? parseFloat(balanceRes.data.balance)\r\n          : NaN; // Use NaN if balance is missing\r\n        setBalance(isNaN(balanceValue) ? null : balanceValue); // Set to null if parsing failed or missing\r\n\r\n        const accountTypeRes = await getAccountType();\r\n        setAccountType(accountTypeRes?.data?.account_type || 'N/A'); // Provide default if missing\r\n        \r\n      } catch (err) {\r\n        console.error(\"Dashboard fetch error:\", err);\r\n        setError(err.response?.data?.message || 'Failed to load dashboard data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Fetch on component mount\r\n\r\n  // --- Loading State ---\r\n  if (loading) {\r\n      return (\r\n          <div className=\"loading-message\">\r\n              <p>Loading your dashboard...</p>\r\n              {/* You could add a CSS spinner here */}\r\n          </div>\r\n      );\r\n  }\r\n\r\n  // --- Error State ---\r\n  if (error) {\r\n      return (\r\n          <div className=\"error-message\">\r\n              <p><strong>Oops! Something went wrong.</strong></p>\r\n              <p>{error}</p>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  // --- Main Content State ---\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2 className=\"dashboard-header\">Dashboard</h2>\r\n\r\n      <div className=\"user-info\">\r\n        <div className=\"info-item\">\r\n          <span className=\"info-label\">Welcome:</span>\r\n          <span className=\"info-value\">{user?.name || 'User'}</span>\r\n        </div>\r\n        <div className=\"info-item\">\r\n          <span className=\"info-label\">Account Number:</span>\r\n          <span className=\"info-value\">{user?.account_no || 'N/A'}</span>\r\n        </div>\r\n        {accountType && (\r\n          <div className=\"info-item\">\r\n            <span className=\"info-label\">Account Type:</span>\r\n            <span className=\"info-value\">{accountType}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"balance-section\">\r\n        <div className=\"balance-label\">Current Balance</div>\r\n        {balance !== null ? (\r\n          <div className=\"balance-amount\">${balance.toFixed(2)}</div>\r\n        ) : (\r\n          <div className=\"balance-error\">Balance unavailable</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* You can add deposit/withdrawal forms or actions here */}\r\n      {/* Example: \r\n      <div style={{ marginTop: '2rem', textAlign: 'center' }}>\r\n        <button className=\"action-button\">Deposit Funds</button>\r\n        <button className=\"action-button withdrawal\">Withdraw Funds</button>\r\n      </div> \r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}