{"ast":null,"code":"var _jsxFileName = \"E:\\\\dbms project bank\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  var _location$state, _location$state$from;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    error\n  } = useAuth(); // Get error state if needed directly on page\n\n  // Redirect path after successful login\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\"; // Default to dashboard\n\n  const handleLoginSuccess = () => {\n    navigate(from, {\n      replace: true\n    }); // Redirect to intended page or dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      mode: \"login\",\n      onSubmitSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"7ugAThp92xtoG460rCw7q1ZsqNI=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","useLocation","AuthForm","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","navigate","location","error","from","state","pathname","handleLoginSuccess","replace","children","mode","onSubmitSuccess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/dbms project bank/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport AuthForm from '../components/AuthForm';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { error } = useAuth(); // Get error state if needed directly on page\r\n\r\n  // Redirect path after successful login\r\n  const from = location.state?.from?.pathname || \"/\"; // Default to dashboard\r\n\r\n  const handleLoginSuccess = () => {\r\n    navigate(from, { replace: true }); // Redirect to intended page or dashboard\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm mode=\"login\" onSubmitSuccess={handleLoginSuccess} />\r\n      {/* Optionally display context error here too, though AuthForm does */}\r\n      {/* {error && <p style={{ color: 'red', marginTop: '10px' }}>{error}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAM,CAAC,GAAGT,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAMU,IAAI,GAAG,EAAAL,eAAA,GAAAG,QAAQ,CAACG,KAAK,cAAAN,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBK,IAAI,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBM,QAAQ,KAAI,GAAG,CAAC,CAAC;;EAEpD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BN,QAAQ,CAACG,IAAI,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACH,QAAQ;MAACiB,IAAI,EAAC,OAAO;MAACC,eAAe,EAAEJ;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG3D,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnBID,SAAS;EAAA,QACIN,WAAW,EACXC,WAAW,EACVE,OAAO;AAAA;AAAAsB,EAAA,GAHrBnB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}